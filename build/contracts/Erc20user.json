{
  "contractName": "Erc20user",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/developtools/truffle/workspace/truffleTest/contracts/Erc20user.sol\":\"Erc20user\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/developtools/truffle/workspace/truffleTest/contracts/Erc20user.sol\":{\"keccak256\":\"0xa6b36ace10f3c5c1c2f96b743813b0f15d513a066ad89b9895e4204f2d02a547\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14ae1f1a3958de2240cad4f8a4c5dc12d934af53ea0e16aaa47ed98d742e464b\",\"dweb:/ipfs/QmT57FBmEBzmuw3XiRk5yKJR5TkYNYRNrpfx7K6Abn1wv4\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x418cfe64226a974419f8ab7287ad4bb413156a4d7af8ab5d9bcaa5678d1a2f22\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f65118c99d5d6cfe602720418b8551c2da6c3de650e61c5231b0be4396aae0d\",\"dweb:/ipfs/QmdLmkRHJhEifzzDjF44MHXcQx2SXc5EzhpHzN2z1vUq8H\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50739ef3507f76ce68752e6c63c9c8cc5562a8c87bc06000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061027c806100746000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806312514bba14610030575b600080fd5b61004a60048036038101906100459190610152565b61004c565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016100a993929190610199565b602060405180830381600087803b1580156100c357600080fd5b505af11580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb9190610129565b5050565b60008151905061010e81610218565b92915050565b6000813590506101238161022f565b92915050565b60006020828403121561013b57600080fd5b6000610149848285016100ff565b91505092915050565b60006020828403121561016457600080fd5b600061017284828501610114565b91505092915050565b610184816101d0565b82525050565b6101938161020e565b82525050565b60006060820190506101ae600083018661017b565b6101bb602083018561017b565b6101c8604083018461018a565b949350505050565b60006101db826101ee565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610221816101e2565b811461022c57600080fd5b50565b6102388161020e565b811461024357600080fd5b5056fea26469706673582212202530a04b9b8f2f6c401719fcf2d1e5d89328ee202696bfbc0450798e8e6a355b64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806312514bba14610030575b600080fd5b61004a60048036038101906100459190610152565b61004c565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016100a993929190610199565b602060405180830381600087803b1580156100c357600080fd5b505af11580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb9190610129565b5050565b60008151905061010e81610218565b92915050565b6000813590506101238161022f565b92915050565b60006020828403121561013b57600080fd5b6000610149848285016100ff565b91505092915050565b60006020828403121561016457600080fd5b600061017284828501610114565b91505092915050565b610184816101d0565b82525050565b6101938161020e565b82525050565b60006060820190506101ae600083018661017b565b6101bb602083018561017b565b6101c8604083018461018a565b949350505050565b60006101db826101ee565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610221816101e2565b811461022c57600080fd5b50565b6102388161020e565b811461024357600080fd5b5056fea26469706673582212202530a04b9b8f2f6c401719fcf2d1e5d89328ee202696bfbc0450798e8e6a355b64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2203:16",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:77:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "92:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "86:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "86:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "77:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "132:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "108:23:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:30:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "108:30:16"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "45:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "53:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "61:5:16",
                "type": ""
              }
            ],
            "src": "7:137:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "202:87:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "212:29:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "234:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "221:12:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "221:20:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "212:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "277:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "250:26:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "250:33:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "250:33:16"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "180:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "188:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "196:5:16",
                "type": ""
              }
            ],
            "src": "150:139:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "369:204:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "415:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "424:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "427:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "417:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "417:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "417:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "390:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "399:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "386:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "386:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "382:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "382:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "379:2:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "441:125:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "456:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "470:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "460:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "485:71:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "528:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "539:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "524:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "524:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "548:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "495:28:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "495:61:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "485:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "339:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "350:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "362:6:16",
                "type": ""
              }
            ],
            "src": "295:278:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "645:196:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "691:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "700:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "703:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "693:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "693:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "693:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "666:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "675:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "662:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "662:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "687:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "658:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "658:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "655:2:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "717:117:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "732:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "746:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "736:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "761:63:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "796:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "807:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "792:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "792:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "816:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "771:20:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "771:53:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "761:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "615:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "626:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "638:6:16",
                "type": ""
              }
            ],
            "src": "579:262:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "912:53:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "929:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "952:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "934:17:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "934:24:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "922:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "922:37:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "922:37:16"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "900:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "907:3:16",
                "type": ""
              }
            ],
            "src": "847:118:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1036:53:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1053:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1076:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1058:17:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1058:24:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1046:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1046:37:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1046:37:16"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1024:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1031:3:16",
                "type": ""
              }
            ],
            "src": "971:118:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1249:288:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1259:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1271:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1282:2:16",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1267:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1267:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1259:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1339:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1352:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1363:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1348:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1348:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1295:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1295:71:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1295:71:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1420:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1433:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1444:2:16",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1429:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1429:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1376:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1376:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1376:72:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1502:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1515:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1526:2:16",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1511:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1511:18:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1458:43:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1458:72:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1458:72:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1205:9:16",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1217:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1225:6:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1233:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1244:4:16",
                "type": ""
              }
            ],
            "src": "1095:442:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1588:51:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1598:35:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1627:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1609:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1609:24:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1598:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1570:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1580:7:16",
                "type": ""
              }
            ],
            "src": "1543:96:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1687:48:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1697:32:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1722:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1715:6:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1715:13:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1708:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1708:21:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1697:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1669:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1679:7:16",
                "type": ""
              }
            ],
            "src": "1645:90:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1786:81:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1796:65:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1811:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1818:42:16",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1807:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1807:54:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1796:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1768:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1778:7:16",
                "type": ""
              }
            ],
            "src": "1741:126:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1918:32:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1928:16:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1939:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1928:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1900:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1910:7:16",
                "type": ""
              }
            ],
            "src": "1873:77:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1996:76:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2050:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2059:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2062:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2052:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2052:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2052:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2019:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2041:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "2026:14:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2026:21:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2016:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2016:32:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2009:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2009:40:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2006:2:16"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1989:5:16",
                "type": ""
              }
            ],
            "src": "1956:116:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2121:79:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2178:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2187:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2190:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2180:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2180:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2180:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2144:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2169:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "2151:17:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2151:24:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2141:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2141:35:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2134:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2134:43:16"
                  },
                  "nodeType": "YulIf",
                  "src": "2131:2:16"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2114:5:16",
                "type": ""
              }
            ],
            "src": "2078:122:16"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "179:434:0:-:0;;;231:145;;;;;;;;;;324:42;303:5;;:65;;;;;;;;;;;;;;;;;;179:434;;;;;;",
  "deployedSourceMap": "179:434:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;541:5;;;;;;;;;;:18;;;560:10;579:4;585:6;541:51;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;489:111;:::o;7:137:16:-;;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:139::-;;234:6;221:20;212:29;;250:33;277:5;250:33;:::i;:::-;202:87;;;;:::o;295:278::-;;411:2;399:9;390:7;386:23;382:32;379:2;;;427:1;424;417:12;379:2;470:1;495:61;548:7;539:6;528:9;524:22;495:61;:::i;:::-;485:71;;441:125;369:204;;;;:::o;579:262::-;;687:2;675:9;666:7;662:23;658:32;655:2;;;703:1;700;693:12;655:2;746:1;771:53;816:7;807:6;796:9;792:22;771:53;:::i;:::-;761:63;;717:117;645:196;;;;:::o;847:118::-;934:24;952:5;934:24;:::i;:::-;929:3;922:37;912:53;;:::o;971:118::-;1058:24;1076:5;1058:24;:::i;:::-;1053:3;1046:37;1036:53;;:::o;1095:442::-;;1282:2;1271:9;1267:18;1259:26;;1295:71;1363:1;1352:9;1348:17;1339:6;1295:71;:::i;:::-;1376:72;1444:2;1433:9;1429:18;1420:6;1376:72;:::i;:::-;1458;1526:2;1515:9;1511:18;1502:6;1458:72;:::i;:::-;1249:288;;;;;;:::o;1543:96::-;;1609:24;1627:5;1609:24;:::i;:::-;1598:35;;1588:51;;;:::o;1645:90::-;;1722:5;1715:13;1708:21;1697:32;;1687:48;;;:::o;1741:126::-;;1818:42;1811:5;1807:54;1796:65;;1786:81;;;:::o;1873:77::-;;1939:5;1928:16;;1918:32;;;:::o;1956:116::-;2026:21;2041:5;2026:21;:::i;:::-;2019:5;2016:32;2006:2;;2062:1;2059;2052:12;2006:2;1996:76;:::o;2078:122::-;2151:24;2169:5;2151:24;:::i;:::-;2144:5;2141:35;2131:2;;2190:1;2187;2180:12;2131:2;2121:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n \r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n \r\ncontract Erc20user {\r\n    IERC20 erc20;\r\n     \r\n    constructor(){\r\n//这个地址是A合约部署之后的地址\r\n         erc20=IERC20(address(0x9EF3507f76Ce68752E6C63c9C8Cc5562a8c87Bc0));\r\n    }   \r\n     \r\n   //address(this)表示当前地址\r\n   //msg.sender表示当前调用这个合约人的地址\r\n    function transfer(uint256 amount) public {\r\n        erc20.transferFrom(msg.sender,address(this),amount);\r\n    }   \r\n     \r\n}",
  "sourcePath": "D:/developtools/truffle/workspace/truffleTest/contracts/Erc20user.sol",
  "ast": {
    "absolutePath": "/D/developtools/truffle/workspace/truffleTest/contracts/Erc20user.sol",
    "exportedSymbols": {
      "Context": [
        819
      ],
      "ERC20": [
        695
      ],
      "Erc20user": [
        38
      ],
      "IERC20": [
        773
      ],
      "IERC20Metadata": [
        798
      ]
    },
    "id": 39,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 39,
        "sourceUnit": 696,
        "src": "61:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 39,
        "sourceUnit": 774,
        "src": "118:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 38,
        "linearizedBaseContracts": [
          38
        ],
        "name": "Erc20user",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "erc20",
            "nodeType": "VariableDeclaration",
            "scope": 38,
            "src": "205:12:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$773",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 5,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 773,
                "src": "205:6:0"
              },
              "referencedDeclaration": 773,
              "src": "205:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$773",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "244:132:0",
              "statements": [
                {
                  "expression": {
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9,
                      "name": "erc20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "303:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$773",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "307839454633353037663736436536383735324536433633633943384363353536326138633837426330",
                              "id": 13,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "324:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0x9EF3507f76Ce68752E6C63c9C8Cc5562a8c87Bc0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 12,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "316:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "316:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "316:51:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "309:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$773_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 15,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "309:59:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$773",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "303:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$773",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 17,
                  "nodeType": "ExpressionStatement",
                  "src": "303:65:0"
                }
              ]
            },
            "id": 19,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "242:2:0"
            },
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "244:0:0"
            },
            "scope": 38,
            "src": "231:145:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 36,
              "nodeType": "Block",
              "src": "530:70:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 27,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "560:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "560:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "579:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Erc20user_$38",
                              "typeString": "contract Erc20user"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Erc20user_$38",
                              "typeString": "contract Erc20user"
                            }
                          ],
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "571:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "571:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "571:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "585:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "541:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$773",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 754,
                      "src": "541:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "541:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "541:51:0"
                }
              ]
            },
            "functionSelector": "12514bba",
            "id": 37,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "507:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "507:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "506:16:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "530:0:0"
            },
            "scope": 38,
            "src": "489:111:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 39,
        "src": "179:434:0"
      }
    ],
    "src": "33:580:0"
  },
  "legacyAST": {
    "absolutePath": "/D/developtools/truffle/workspace/truffleTest/contracts/Erc20user.sol",
    "exportedSymbols": {
      "Context": [
        819
      ],
      "ERC20": [
        695
      ],
      "Erc20user": [
        38
      ],
      "IERC20": [
        773
      ],
      "IERC20Metadata": [
        798
      ]
    },
    "id": 39,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 39,
        "sourceUnit": 696,
        "src": "61:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 39,
        "sourceUnit": 774,
        "src": "118:56:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 38,
        "linearizedBaseContracts": [
          38
        ],
        "name": "Erc20user",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6,
            "mutability": "mutable",
            "name": "erc20",
            "nodeType": "VariableDeclaration",
            "scope": 38,
            "src": "205:12:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$773",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 5,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 773,
                "src": "205:6:0"
              },
              "referencedDeclaration": 773,
              "src": "205:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$773",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "244:132:0",
              "statements": [
                {
                  "expression": {
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9,
                      "name": "erc20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6,
                      "src": "303:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$773",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "307839454633353037663736436536383735324536433633633943384363353536326138633837426330",
                              "id": 13,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "324:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "value": "0x9EF3507f76Ce68752E6C63c9C8Cc5562a8c87Bc0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 12,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "316:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "316:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 14,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "316:51:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 773,
                        "src": "309:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$773_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 15,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "309:59:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$773",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "303:65:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$773",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 17,
                  "nodeType": "ExpressionStatement",
                  "src": "303:65:0"
                }
              ]
            },
            "id": 19,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "242:2:0"
            },
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "244:0:0"
            },
            "scope": 38,
            "src": "231:145:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 36,
              "nodeType": "Block",
              "src": "530:70:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 27,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "560:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "560:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "579:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Erc20user_$38",
                              "typeString": "contract Erc20user"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Erc20user_$38",
                              "typeString": "contract Erc20user"
                            }
                          ],
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "571:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 29,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "571:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "571:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "585:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6,
                        "src": "541:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$773",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 754,
                      "src": "541:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "541:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "541:51:0"
                }
              ]
            },
            "functionSelector": "12514bba",
            "id": 37,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37,
                  "src": "507:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "507:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "506:16:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "530:0:0"
            },
            "scope": 38,
            "src": "489:111:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 39,
        "src": "179:434:0"
      }
    ],
    "src": "33:580:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-12T08:14:56.065Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}